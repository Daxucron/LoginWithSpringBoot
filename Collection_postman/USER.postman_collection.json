{
	"info": {
		"_postman_id": "921c28f3-1a90-4042-9bcb-cc4fb56f6ede",
		"name": "USER",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38830099"
	},
	"item": [
		{
			"name": "RegisterUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de estado es 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Respuesta contiene userName\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"userName\");\r",
							"    pm.expect(jsonData.userName).to.eql(\"testUser\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"testUser\",\r\n    \"password\": \"testPassword\",\r\n    \"email\": \"test@example.com\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Extrae el token del encabezado 'Authorization' de la respuesta\r",
							"const accessToken = pm.response.headers.get(\"Authorization\");\r",
							"\r",
							"// Guarda el token completo en la variable de la colección\r",
							"if (accessToken) {\r",
							"    pm.collectionVariables.set(\"access_token\", accessToken); // Guarda el token tal cual, incluyendo \"Bearer\"\r",
							"    console.log(\"Token de acceso guardado en la variable de colección:\", accessToken);\r",
							"} else {\r",
							"    console.log(\"No se encontró un token de acceso en el encabezado de la respuesta.\");\r",
							"}\r",
							"\r",
							"pm.test(\"El token de acceso debe comenzar con 'Bearer '\", function () {\r",
							"    pm.expect(accessToken).to.not.be.undefined;\r",
							"    pm.expect(accessToken).to.match(/^Bearer\\s.+/);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"testUser\",\r\n    \"password\": \"testPassword\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "TestWithAuth",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Obtiene el token guardado en la variable de colección\r",
							"const accessToken = pm.collectionVariables.get(\"access_token\");\r",
							"\r",
							"// Solo establece el encabezado si el token existe\r",
							"if (accessToken) {\r",
							"    pm.request.headers.add({ key: \"Authorization\", value: accessToken });\r",
							"    console.log(\"Encabezado Authorization establecido con el token de acceso.\");\r",
							"    console.log(accessToken);\r",
							"} else {\r",
							"    console.log(\"No se encontró un token de acceso en las variables de la colección.\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"test"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		}
	]
}